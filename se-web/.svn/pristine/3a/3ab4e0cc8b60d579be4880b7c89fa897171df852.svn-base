<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="NoticeUserRel">
	<sql id="searchColumn">
		ID, NOTICE_ID, USER_ID, IS_READ, STATUS, READ_TIME, FUNCTION_CODE, UPDATE_TIME, UPDATE_USER
	</sql>
	
	<resultMap type="NoticeUserRel" id="noticeUserRel" extends="base.baseAttr">
	   <result property="noticeId" column="NOTICE_ID" javaType="long"></result>
	   <result property="userId" column="USER_ID" javaType="long"></result>
	   <result property="isRead" column="IS_READ"></result>
	   <result property="status" column="STATUS"></result>
	   <result property="readTime" column="READ_TIME"></result>
	   <result property="functionCode" column="FUNCTION_CODE"></result>
	</resultMap>
	
    <insert id="save" parameterType="map" keyProperty="id" useGeneratedKeys="true">
         INSERT INTO pub_notice_user_rel
         (NOTICE_ID, USER_ID, IS_READ, STATUS, READ_TIME, FUNCTION_CODE) 
         VALUES 
         (#{noticeId}, #{userId}, #{isRead}, #{status}, #{readTime}, #{functionCode})
    </insert>
    
    <insert id="saveRecordBatch" parameterType="map">
         INSERT INTO pub_notice_user_rel
         (NOTICE_ID, USER_ID, IS_READ, STATUS, READ_TIME, FUNCTION_CODE) 
         VALUES
         <foreach collection="list" item="item" index="index" separator="," > 
	        (#{item.noticeId}, #{item.userId}, #{item.isRead}, #{item.status}, #{item.readTime}, #{item.functionCode})
	     </foreach>
    </insert>
    
    <update id="delete" parameterType="map">
		UPDATE pub_notice_user_rel
		<set>
			update_time = #{updateTime}, update_user = #{updateUser}, status = #{status}
		</set>
		<where>
			<if test="id != null">
				AND id=#{id}
			</if>
			<if test="ids != null">
				 id in
				<foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
				#{id}
		        </foreach>
			</if>
		</where>
	</update>
	
	<update id="update" parameterType="map">
		UPDATE pub_notice_user_rel
		<set>
			update_time = #{updateTime}, update_user = #{updateUser}
			<if test="isRead != null">
				,is_read = #{isRead}
			</if>
			<if test="readTime != null">
				,read_time = #{readTime}
			</if>
		</set>
		<where>
			<if test="id != null">
				AND id=#{id}
			</if>
			<if test="ids != null">
				 id in
				<foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
				#{id}
		        </foreach>
			</if>
		</where>
	</update>
	
	<select id="selectById" parameterType="long" resultMap="noticeUserRel">
		SELECT <include refid="searchColumn" /> FROM pub_notice_user_rel WHERE id=#{id}
	</select>
	
	<select id="selectAll" parameterType="map" resultMap="noticeUserRel">
		SELECT <include refid="searchColumn" /> FROM pub_notice_user_rel
		<include refid="condition" />
		ORDER BY id ASC
		<include refid="base.page" />
	</select>
	
	<select id="selectAllCount" resultType="long">
        SELECT count(id) FROM pub_notice_user_rel
		<include refid="condition" />
    </select>
	
	<sql id="condition">
		<where>
			<if test="id != null">
				AND id=#{id}
			</if>
			<if test="isRead != null">
				AND is_read=#{isRead}
			</if>
			<if test="userId != null">
				AND user_id=#{userId}
			</if>
			<if test="statusList != null">
				AND status in
				<foreach collection="statusList" item="s" index="index" open="(" separator="," close=")">
				#{s}
		        </foreach>
			</if>
			<if test="ids != null">
				 id IN
				<foreach collection="ids" item="s" index="index" open="(" separator="," close=")">
				#{s}
		        </foreach>
			</if>
		</where>
	</sql>
</mapper>